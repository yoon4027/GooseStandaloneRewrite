{"version":3,"sources":["../src/main.ts"],"sourcesContent":["await import(\"#lib/util/setup\");\n\nimport { final } from \"#lib/util/setup/final\";\nimport { init } from \"#lib/util/setup/init\";\nimport type { InquirerOptions } from \"#types/types\";\nimport { Logger } from \"@dimensional-fun/logger\";\nimport { container } from \"@sapphire/pieces\";\nimport { Result } from \"@sapphire/result\";\nimport { readFile, rm } from \"fs/promises\";\nimport { default as Inquirer } from \"inquirer\";\nimport { dirname, join } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { exit } from \"process\";\nconst __dirname = dirname(fileURLToPath(import.meta.url));\n\nconst logger = new Logger(\"main\");\n\nasync function bootstrap() {\n  const buildPath = join(__dirname, \"..\", \"out\", \"build\");\n  const distPath = join(__dirname, \"..\", \"out\", \"dist\");\n\n  const defaultPatches = [\"gooseupdate\", \"portable\", \"branding-files\"];\n  const allPatches = container.stores.get(\"patches\").map((p) => p.name);\n\n  const options = (await Inquirer.prompt([\n    {\n      type: \"input\",\n\n      name: \"name\",\n\n      default: \"goosestandalone\",\n\n      message: \"Client name\",\n    },\n\n    {\n      type: \"list\",\n      loop: false,\n\n      name: \"platform\",\n\n      default: \"windows\",\n\n      message: \"Discord platform\",\n      choices: [\"linux\", \"windows\"],\n    },\n\n    {\n      type: \"list\",\n      loop: false,\n\n      name: \"channel\",\n\n      default: \"stable\",\n\n      message: \"Discord channel\",\n      choices: [\"stable\", \"ptb\", \"canary\"],\n    },\n    {\n      type: \"checkbox\",\n\n      name: \"patches\",\n\n      message: \"Client patches\",\n\n      choices: allPatches.map((x) => ({\n        checked: defaultPatches.includes(x),\n        name: x,\n      })),\n    },\n  ])) as InquirerOptions;\n\n  const initResult = await Result.fromAsync(\n    await init({ ...options, buildPath })\n  );\n\n  if (initResult.isErr()) {\n    return logger.error(initResult.err());\n  }\n\n  const dirs = initResult.unwrap();\n\n  const patchesStore = container.stores.get(\"patches\");\n\n  const extraInformation = {\n    ...options,\n    buildInfo: JSON.parse(\n      await readFile(\n        join(dirs.basePath, \"resources\", \"build_info.json\"),\n        \"utf8\"\n      )\n    ),\n  };\n\n  for (const patchName of options.patches) {\n    void (await patchesStore\n      .get(patchName)\n      ?.run({ ...dirs }, extraInformation));\n  }\n\n  logger.info(\"\\n\\nFinalising...\");\n\n  const finalPath = join(\n    distPath,\n    options.channel,\n    options.platform,\n    options.platform === \"windows\" ? `app-0.0.0` : \"\"\n  );\n\n  await rm(finalPath, { recursive: true, force: true });\n\n  const finalResult = await Result.fromAsync(\n    await final(dirs, { ...extraInformation, finalPath })\n  );\n\n  if (finalResult.isErr()) {\n    return logger.error(finalResult.err());\n  }\n  logger.silly(\"Process fully done.\");\n\n  exit(0);\n}\n\nawait bootstrap();\n"],"mappings":";;AAAA,MAAM,OAAO;AAEb;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,QAAQ,cAAc,YAAY,GAAG,CAAC;AAExD,MAAM,SAAS,IAAI,OAAO,MAAM;AAEhC,2BAA2B;AACzB,QAAM,YAAY,KAAK,WAAW,MAAM,OAAO,OAAO;AACtD,QAAM,WAAW,KAAK,WAAW,MAAM,OAAO,MAAM;AAEpD,QAAM,iBAAiB,CAAC,eAAe,YAAY,gBAAgB;AACnE,QAAM,aAAa,UAAU,OAAO,IAAI,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;AAEpE,QAAM,UAAW,MAAM,SAAS,OAAO;AAAA,IACrC;AAAA,MACE,MAAM;AAAA,MAEN,MAAM;AAAA,MAEN,SAAS;AAAA,MAET,SAAS;AAAA,IACX;AAAA,IAEA;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MAEN,MAAM;AAAA,MAEN,SAAS;AAAA,MAET,SAAS;AAAA,MACT,SAAS,CAAC,SAAS,SAAS;AAAA,IAC9B;AAAA,IAEA;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MAEN,MAAM;AAAA,MAEN,SAAS;AAAA,MAET,SAAS;AAAA,MACT,SAAS,CAAC,UAAU,OAAO,QAAQ;AAAA,IACrC;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MAEN,MAAM;AAAA,MAEN,SAAS;AAAA,MAET,SAAS,WAAW,IAAI,CAAC,MAAO;AAAA,QAC9B,SAAS,eAAe,SAAS,CAAC;AAAA,QAClC,MAAM;AAAA,MACR,EAAE;AAAA,IACJ;AAAA,EACF,CAAC;AAED,QAAM,aAAa,MAAM,OAAO,UAC9B,MAAM,KAAK,EAAE,GAAG,SAAS,UAAU,CAAC,CACtC;AAEA,MAAI,WAAW,MAAM,GAAG;AACtB,WAAO,OAAO,MAAM,WAAW,IAAI,CAAC;AAAA,EACtC;AAEA,QAAM,OAAO,WAAW,OAAO;AAE/B,QAAM,eAAe,UAAU,OAAO,IAAI,SAAS;AAEnD,QAAM,mBAAmB;AAAA,IACvB,GAAG;AAAA,IACH,WAAW,KAAK,MACd,MAAM,SACJ,KAAK,KAAK,UAAU,aAAa,iBAAiB,GAClD,MACF,CACF;AAAA,EACF;AAEA,aAAW,aAAa,QAAQ,SAAS;AACvC,SAAM,MAAM,aACT,IAAI,SAAS,GACZ,IAAI,EAAE,GAAG,KAAK,GAAG,gBAAgB;AAAA,EACvC;AAEA,SAAO,KAAK,mBAAmB;AAE/B,QAAM,YAAY,KAChB,UACA,QAAQ,SACR,QAAQ,UACR,QAAQ,aAAa,YAAY,cAAc,EACjD;AAEA,QAAM,GAAG,WAAW,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAEpD,QAAM,cAAc,MAAM,OAAO,UAC/B,MAAM,MAAM,MAAM,EAAE,GAAG,kBAAkB,UAAU,CAAC,CACtD;AAEA,MAAI,YAAY,MAAM,GAAG;AACvB,WAAO,OAAO,MAAM,YAAY,IAAI,CAAC;AAAA,EACvC;AACA,SAAO,MAAM,qBAAqB;AAElC,OAAK,CAAC;AACR;AAxGe;AA0Gf,MAAM,UAAU;","names":[]}