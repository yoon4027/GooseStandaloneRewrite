{"version":3,"sources":["../../../../src/lib/util/setup/final.ts"],"sourcesContent":["import { setupWindows } from \"#lib/setup/windows\";\nimport { copyDir } from \"#lib/util\";\nimport type { PatchRun, PatchRunExtra } from \"#types/types\";\nimport { Logger } from \"@dimensional-fun/logger\";\nimport { createPackage } from \"asar\";\nimport { existsSync } from \"fs\";\nimport { mkdir, rm, writeFile } from \"fs/promises\";\nimport { join } from \"path\";\n\nconst logger = new Logger(\"final\");\n\nexport const final = async (\n  { basePath, asarFilePath, asarExtractPath }: PatchRun,\n  { platform, finalPath }: FinalExtraInformation\n) => {\n  await createPackage(asarExtractPath, asarFilePath);\n\n  logger.info(\"Repacked asar\");\n\n  if (existsSync(finalPath)) {\n    await rm(finalPath, { recursive: true, force: true });\n  }\n\n  await mkdir(join(finalPath, \"..\"), { recursive: true });\n\n  await copyDir({\n    from: basePath,\n    to: finalPath,\n  });\n\n  await rm(basePath, { recursive: true, force: true });\n\n  await writeFile(join(finalPath, \"package.json\"), JSON.stringify({}));\n\n  logger.warn(\"Finalised\");\n\n  if (platform === \"windows\") {\n    logger.warn(\"Running script to setup windows standlone.\");\n    await setupWindows({\n      basePath: join(finalPath, \"..\"),\n    });\n  }\n};\n\ninterface FinalExtraInformation extends PatchRunExtra {\n  finalPath: string;\n}\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAM,SAAS,IAAI,OAAO,OAAO;AAE1B,MAAM,QAAQ,8BACnB,EAAE,UAAU,cAAc,mBAC1B,EAAE,UAAU,gBACT;AACH,QAAM,cAAc,iBAAiB,YAAY;AAEjD,SAAO,KAAK,eAAe;AAE3B,MAAI,WAAW,SAAS,GAAG;AACzB,UAAM,GAAG,WAAW,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAAA,EACtD;AAEA,QAAM,MAAM,KAAK,WAAW,IAAI,GAAG,EAAE,WAAW,KAAK,CAAC;AAEtD,QAAM,QAAQ;AAAA,IACZ,MAAM;AAAA,IACN,IAAI;AAAA,EACN,CAAC;AAED,QAAM,GAAG,UAAU,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAEnD,QAAM,UAAU,KAAK,WAAW,cAAc,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;AAEnE,SAAO,KAAK,WAAW;AAEvB,MAAI,aAAa,WAAW;AAC1B,WAAO,KAAK,4CAA4C;AACxD,UAAM,aAAa;AAAA,MACjB,UAAU,KAAK,WAAW,IAAI;AAAA,IAChC,CAAC;AAAA,EACH;AACF,GA/BqB;","names":[]}